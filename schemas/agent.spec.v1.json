{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Realm Agent Specification v1",
  "description": "Standardized specification for AI agents in the Realm system",
  "type": "object",
  "required": [
    "name", "provider", "model", "purpose", "version", "updated", "slo"
  ],
  "properties": {
    "name": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]+$",
      "description": "Unique agent identifier (kebab-case)"
    },
    "provider": {
      "type": "string",
      "enum": ["anthropic", "google", "openai", "local", "custom"],
      "description": "AI provider/backend"
    },
    "model": {
      "type": "string",
      "description": "Specific model identifier"
    },
    "purpose": {
      "type": "string",
      "description": "Agent's primary capabilities and use cases"
    },
    "system_prompt_file": {
      "type": "string",
      "description": "Path to system prompt file"
    },
    "limits": {
      "type": "object",
      "properties": {
        "max_output_tokens": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100000
        },
        "max_input_tokens": {
          "type": "integer",
          "minimum": 1
        },
        "temperature": {
          "type": "number",
          "minimum": 0,
          "maximum": 2
        },
        "top_p": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "requests_per_minute": {
          "type": "integer",
          "minimum": 1
        },
        "cost_per_request_cents": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "collaboration": {
      "type": "object",
      "properties": {
        "persona": {
          "type": "string",
          "description": "Agent's collaborative personality"
        },
        "handoff_protocol": {
          "type": "string",
          "description": "Path to handoff protocol documentation"
        },
        "output_contract": {
          "type": "string",
          "description": "Path to output schema contract"
        },
        "compatible_agents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of compatible agent names for handoffs"
        }
      }
    },
    "policies": {
      "type": "object",
      "additionalProperties": true,
      "description": "Agent-specific behavioral policies"
    },
    "tools": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "schema"],
        "properties": {
          "name": {
            "type": "string"
          },
          "schema": {
            "type": "string",
            "description": "Path to tool schema file"
          },
          "enabled": {
            "type": "boolean",
            "default": true
          }
        }
      }
    },
    "logging": {
      "type": "object",
      "properties": {
        "attribution": {
          "type": "boolean",
          "default": true
        },
        "redact_secrets": {
          "type": "boolean",
          "default": true
        },
        "include_prompts": {
          "type": "boolean",
          "default": false
        },
        "include_responses": {
          "type": "boolean",
          "default": true
        },
        "log_level": {
          "type": "string",
          "enum": ["debug", "info", "warn", "error"],
          "default": "info"
        }
      }
    },
    "slo": {
      "type": "object",
      "required": ["latency_p95_ms", "success_rate"],
      "properties": {
        "latency_p95_ms": {
          "type": "integer",
          "minimum": 1,
          "description": "95th percentile latency target in milliseconds"
        },
        "latency_p99_ms": {
          "type": "integer",
          "minimum": 1,
          "description": "99th percentile latency target in milliseconds"
        },
        "success_rate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Target success rate (0.0 to 1.0)"
        },
        "availability": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.99,
          "description": "Target availability (0.0 to 1.0)"
        },
        "cost_per_1k_requests_cents": {
          "type": "number",
          "minimum": 0,
          "description": "Cost target per 1000 requests in cents"
        }
      }
    },
    "deployment": {
      "type": "object",
      "properties": {
        "canary_enabled": {
          "type": "boolean",
          "default": true
        },
        "canary_percentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        },
        "rollback_conditions": {
          "type": "object",
          "properties": {
            "error_rate_threshold": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "default": 0.05
            },
            "latency_increase_threshold": {
              "type": "number",
              "minimum": 1,
              "default": 1.5
            }
          }
        }
      }
    },
    "testing": {
      "type": "object",
      "properties": {
        "test_suite": {
          "type": "string",
          "description": "Path to agent test suite"
        },
        "benchmark_queries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Standard queries for performance benchmarking"
        },
        "quality_gates": {
          "type": "object",
          "properties": {
            "min_accuracy_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "max_hallucination_rate": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          }
        }
      }
    },
    "version": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
      "description": "Semantic version (major.minor.patch)"
    },
    "updated": {
      "type": "string",
      "format": "date",
      "description": "Last update date (YYYY-MM-DD)"
    },
    "deprecated": {
      "type": "boolean",
      "default": false
    },
    "deprecation_notice": {
      "type": "string",
      "description": "Deprecation message and migration instructions"
    }
  }
}